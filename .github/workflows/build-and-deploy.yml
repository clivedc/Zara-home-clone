name: Build and deploy

on:
    push:
        branches: ["main"]
    workflow_dispatch:

jobs:
    # Build job
    build:
        runs-on: ${{ matrix.os }}

        permissions:
            actions: read
            checks: read
            contents: write
            deployments: read
            discussions: read
            issues: read
            packages: read
            pages: read
            pull-requests: read
            repository-projects: read
            security-events: read
            statuses: read
            id-token: write
            
        strategy:
            matrix:
                node-version: [16.x, 18.x]
                os: [ubuntu-latest, windows-latest, macOS-latest]

        # set default shell to bash
        defaults:
            run:
                shell: bash

        steps:
            - uses: actions/checkout@v3

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
              
            # Use cached dependencies if present, else cache dependencies if not present
            - name: Caching dependencies
              id: cache-node_modules
              uses: actions/cache@v3.3.1
              with:
                # A list of files, directories, and wildcard patterns to cache and restore
                path: ./node_modules
                # An explicit key for restoring and saving the cache
                key: node_modules-cache--${{ hashfiles('package-lock.json') }}
                # An optional boolean when enabled, allows windows runners to save or restore caches that can be restored or saved respectively on other platforms
                enableCrossOsArchive: true

            - name: Install dependencies
              if: steps.cache-node_modules.outputs.cache-hit != true
              run: npm install
              
            # Compile build files and push the commit to the 'gh-pages' branch of the repo
            - name: Build files and commit to branch 'gh-pages' of repo
              env:
                SHOULD_PUSH_TO_GH-PAGES: true
                CHANGES_TO_COMMIT_TO_MAIN: true
                CHANGES_TO_COMMIT_TO_GH-PAGES: true
              run: |
                  npm run build
                  echo 'Checking out gh-pages branch'
                  git fetch --prune
                  git config user.email 'clive.dcosta98@gmail.com'
                  git config user.name 'clivedc'
                  git add .
                  CHANGES_TO_COMMIT_TO_MAIN=$( git status )
                  if [[ $CHANGES_TO_COMMIT_TO_MAIN =~ "nothing to commit" ]]; then echo $CHANGES_TO_COMMIT_TO_MAIN; else git commit -m "Compiled new build files"; fi
                  echo 'Checking out gh-pages branch'
                  git checkout -t origin/gh-pages
                  echo
                  echo Checking for node_modules in gh-pages branch
                  NODE_DIR=$( find * -type d -name 'node_modules' )
                  if [ "$NODE_DIR" = "" ]; then echo node_modules is not present in gh-pages branch; else echo node_modules is present; fi
                  echo
                  echo 'Cleaning gh-pages branch'
                  find * | grep -ve 'node_modules' | xargs rm -rf
                  echo
                  echo 'Copying build files from main branch'
                  git checkout main -- build
                  echo 'Moving all files in build directory to root directory, ${{ github.workspace }}'
                  git mv build/* ./
                  echo 'Removing empty build folder'
                  rmdir --verbose build
                  echo
                  echo 'Listing all files in current directory, ${{ github.workspace }}'
                  ls
                  echo
                  echo 'Commit and push the changes to the gh-pages branch in the repo'
                  echo 'Adding files to staging area'
                  git add .
                  echo The 'git add' command exited with exit status $?
                  echo
                  echo 'Commiting changes locally'
                  CHANGES_TO_COMMIT_TO_GH-PAGES=$( git status )
                  if [[ $CHANGES_TO_COMMIT_TO_GH-PAGES =~ "nothing to commit" ]]; then echo $CHANGES_TO_COMMIT_TO_GH-PAGES; SHOULD_PUSH_TO_GH-PAGES=false; else git commit -m "Compiled new build files"; fi
                  echo
                  echo "Printing the value of env variable, SHOULD_PUSH_TO_GH-PAGES: $SHOULD_PUSH_TO_GH-PAGES"
                  if [ $SHOULD_PUSH_TO_GH-PAGES = true ]; then echo 'Pushing changes to repo'; git push origin gh-pages; else echo 'No changes to push'; fi
                  echo
                  echo 'Switching back to main branch so that node_modules can be cached'
                  git switch main
                  echo
                  if [ "$NODE_DIR" != "" ]; then echo node_modules exists; else echo 'Copying node_modules from main branch'; git checkout main -- node_modules; fi 

    
    # Upload Build files
    build-and-upload-artifact:
        needs: build
        runs-on: ubuntu-latest
        steps:
              - uses: actions/checkout@v3
                with:
                    ref: gh-pages
              - name: Upload a Build Artifact
                uses: actions/upload-pages-artifact@v1
                with:
                    path: ./ 

    # Deploy job
    deploy:
        needs: build

        # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
        permissions:
            pages: write # to deploy to Pages
            id-token: write # to verify the deployment originates from an appropriate source

        # Deploy to the github-pages environment
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}

        # Specify runner + deployment step
        runs-on: ubuntu-latest
        steps:
            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v1
