name: Build and deploy

on:
    push:
        branches: ["main"]
    workflow_dispatch:

jobs:
    # Build job
    build:
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                node-version: [16.x, 18.x]
                os: [ubuntu-latest, windows-latest, macOS-latest]

        # set default shell to bash
        defaults:
            run:
                shell: bash

        steps:
            - uses: actions/checkout@v3

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
              
            # Use cached dependencies if present, else cache dependencies if not present
            - name: Caching dependencies
              id: cache-node_modules
              uses: actions/cache@v3.3.1
              with:
                # A list of files, directories, and wildcard patterns to cache and restore
                path: ./node_modules
                # An explicit key for restoring and saving the cache
                key: node_modules-cache--${{ hashfiles('package-lock.json') }}
                # An optional boolean when enabled, allows windows runners to save or restore caches that can be restored or saved respectively on other platforms
                enableCrossOsArchive: true

            - name: Install dependencies
              if: steps.cache-node_modules.outputs.cache-hit != true
              run: npm install
              
            - name: Build the files that need to be deployed
              run: npm run build
              
            - if: runner.os == "ubuntu-latest"  
              name: checkout gh-pages branch and copy build files
              run: |
                  echo '${{ github.workspace }} , ${{ ~/ }}'
                  git branch
                  echo 'Create and checkout gh-pages branch'
                  git checkout -b gh-pages
                  git branch
                  echo 'Cleaning gh-pages branch'
                  rm -rf *
                  echo 'Copying build files from main branch'
                  git checkout main -- build
                  echo 'Moving all files in build to root directory ${{ github.workspace }}'
                  git mv build/* ./
                  echo 'Removing empty build folder'
                  rmdir build
                  ls
            
            # Upload Build files
            - if: runner.os == "ubuntu-latest"
              name: Upload a Build Artifact
              uses: actions/upload-pages-artifact@v1
              with:
                path: ./

    # Deploy job
    deploy:
        needs: build

        # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
        permissions:
            pages: write # to deploy to Pages
            id-token: write # to verify the deployment originates from an appropriate source

        # Deploy to the github-pages environment
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}

        # Specify runner + deployment step
        runs-on: ubuntu-latest
        steps:
            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v1
